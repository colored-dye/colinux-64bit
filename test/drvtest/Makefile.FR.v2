#
# by Frank Rysanek <rysanek@fccps.cz>
#
# Based on the source code of ioperm.c by Marcel Telka <marcel@telka.sk> 
#   - thanks a million :-)
#

DRVNAME = drvtest
#INCLUDES = -I/usr/include/w32api/ddk
INCLUDES =
CC = gcc
CFLAGS = -Wall $(INCLUDES)
DLLTOOL = dlltool
STRIP = strip

all: $(DRVNAME).sys

# This shall get appended to the built-in set of suffixes supported:
.SUFFIXES: .sys
# Otherwise the inference rule below wouldn't ever kick in.

# This is implicit, no need to define this explicitly:
#.c.o:
#	$(CC) $(CFLAGS) -c -o $@ $<

# This inference rule allows us to turn an .o into a .sys without
# much hassle, implicitly.
# The downside is, that you cannot potentially add further object files
# to get linked into the .sys driver (such as, some custom ASM routines).
# Oh wait, maybe you can... try adding your .o after the last $(CC) in the rule...
.o.sys:
	$(CC)	-Wl,--base-file,$*.base \
	-Wl,--entry,_DriverEntry@8 \
	-nostartfiles -nostdlib \
	-o junk.tmp \
	$*.o \
	-lntoskrnl
	-rm -f junk.tmp
	$(DLLTOOL) --dllname $*.sys \
	--base-file $*.base --output-exp $*.exp
	$(CC) -Wl,--subsystem,native \
	-Wl,--image-base,0x10000 \
	-Wl,--file-alignment,0x1000 \
	-Wl,--section-alignment,0x1000 \
	-Wl,--entry,_DriverEntry@8 \
	-Wl,$*.exp \
	-mdll -nostartfiles -nostdlib \
	-o $*.sys \
	$*.o \
	-lntoskrnl
	$(STRIP) $*.sys

clean:
	rm -f  *.sys *.base *.exp *.o *~ junk.tmp

